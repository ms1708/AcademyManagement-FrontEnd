// Academy Management System - SCSS Mixins
// Reusable mixins for common patterns

// Breakpoint Mixins
@mixin mobile {
  @media (max-width: #{$breakpoint-xs - 1px}) {
    @content;
  }
}

@mixin tablet {
  @media (min-width: #{$breakpoint-xs}) and (max-width: #{$breakpoint-sm - 1px}) {
    @content;
  }
}

@mixin desktop {
  @media (min-width: #{$breakpoint-sm}) {
    @content;
  }
}

@mixin large-desktop {
  @media (min-width: #{$breakpoint-lg}) {
    @content;
  }
}

// Flexbox Mixins
@mixin flex-center {
  display: flex;
  align-items: center;
  justify-content: center;
}

@mixin flex-between {
  display: flex;
  align-items: center;
  justify-content: space-between;
}

@mixin flex-column {
  display: flex;
  flex-direction: column;
}

@mixin flex-column-center {
  display: flex;
  flex-direction: column;
  align-items: center;
  justify-content: center;
}

// Typography Mixins
@mixin text-ellipsis {
  overflow: hidden;
  text-overflow: ellipsis;
  white-space: nowrap;
}

@mixin text-truncate($lines: 2) {
  display: -webkit-box;
  -webkit-line-clamp: $lines;
  -webkit-box-orient: vertical;
  overflow: hidden;
}

@mixin heading($size: 'base', $weight: $font-weight-medium) {
  font-family: $font-family-primary;
  font-weight: $weight;
  line-height: $line-height-tight;
  margin: 0;
  
  @if $size == 'xs' {
    font-size: $font-size-xs;
  } @else if $size == 'sm' {
    font-size: $font-size-sm;
  } @else if $size == 'base' {
    font-size: $font-size-base;
  } @else if $size == 'lg' {
    font-size: $font-size-lg;
  } @else if $size == 'xl' {
    font-size: $font-size-xl;
  } @else if $size == '2xl' {
    font-size: $font-size-2xl;
  } @else if $size == '3xl' {
    font-size: $font-size-3xl;
  } @else if $size == '4xl' {
    font-size: $font-size-4xl;
  }
}

// Button Mixins
@mixin button-base {
  display: inline-flex;
  align-items: center;
  justify-content: center;
  gap: $spacing-sm;
  border: none;
  border-radius: $button-border-radius;
  cursor: pointer;
  font-family: $font-family-primary;
  font-weight: $font-weight-medium;
  text-decoration: none;
  transition: all $duration-fast $ease-in-out;
  user-select: none;
  white-space: nowrap;
  
  &:disabled {
    opacity: 0.6;
    cursor: not-allowed;
  }
  
  &:focus {
    outline: 2px solid $primary-color;
    outline-offset: 2px;
  }
}

@mixin button-size($size: 'base') {
  @if $size == 'sm' {
    height: $button-height-sm;
    padding: 0 $spacing-sm;
    font-size: $font-size-sm;
  } @else if $size == 'base' {
    height: $button-height;
    padding: $button-padding;
    font-size: $font-size-base;
  } @else if $size == 'lg' {
    height: $button-height-lg;
    padding: 0 $spacing-lg;
    font-size: $font-size-lg;
  }
}

@mixin button-variant($bg-color, $text-color: $white, $hover-bg: null) {
  background-color: $bg-color;
  color: $text-color;
  
  &:hover:not(:disabled) {
    background-color: $hover-bg or darken($bg-color, 10%);
  }
  
  &:active:not(:disabled) {
    background-color: darken($bg-color, 15%);
  }
}

// Card Mixins
@mixin card-base {
  background-color: $surface-color;
  border-radius: $card-border-radius;
  box-shadow: $shadow-sm;
  overflow: hidden;
  transition: box-shadow $duration-normal $ease-in-out;
  
  &:hover {
    box-shadow: $shadow-md;
  }
}

@mixin card-padding($padding: $card-padding) {
  padding: $padding;
}

// Form Mixins
@mixin input-base {
  width: 100%;
  height: $input-height;
  padding: $input-padding;
  border: 1px solid $border-color;
  border-radius: $input-border-radius;
  font-family: $font-family-primary;
  font-size: $font-size-base;
  transition: border-color $duration-fast $ease-in-out;
  
  &:focus {
    outline: none;
    border-color: $primary-color;
    box-shadow: 0 0 0 2px rgba($primary-color, 0.2);
  }
  
  &:disabled {
    background-color: $gray-100;
    color: $text-disabled;
    cursor: not-allowed;
  }
  
  &::placeholder {
    color: $text-hint;
  }
}

@mixin form-field-error {
  border-color: $error-color;
  
  &:focus {
    box-shadow: 0 0 0 2px rgba($error-color, 0.2);
  }
}

// Layout Mixins
@mixin container {
  width: 100%;
  max-width: $breakpoint-xl;
  margin: 0 auto;
  padding: 0 $spacing-md;
  
  @include desktop {
    padding: 0 $spacing-lg;
  }
}

@mixin section-padding($top: $spacing-xl, $bottom: $spacing-xl) {
  padding-top: $top;
  padding-bottom: $bottom;
}

// Animation Mixins
@mixin fade-in($duration: $duration-normal) {
  animation: fadeIn $duration $ease-in-out;
}

@mixin slide-in($direction: 'up', $duration: $duration-normal) {
  @if $direction == 'up' {
    animation: slideInUp $duration $ease-out;
  } @else if $direction == 'down' {
    animation: slideInDown $duration $ease-out;
  } @else if $direction == 'left' {
    animation: slideInLeft $duration $ease-out;
  } @else if $direction == 'right' {
    animation: slideInRight $duration $ease-out;
  }
}

@mixin pulse($duration: 1s) {
  animation: pulse $duration infinite;
}

// Utility Mixins
@mixin sr-only {
  position: absolute;
  width: 1px;
  height: 1px;
  padding: 0;
  margin: -1px;
  overflow: hidden;
  clip: rect(0, 0, 0, 0);
  white-space: nowrap;
  border: 0;
}

@mixin clearfix {
  &::after {
    content: '';
    display: table;
    clear: both;
  }
}

@mixin aspect-ratio($width, $height) {
  position: relative;
  
  &::before {
    content: '';
    display: block;
    padding-top: ($height / $width) * 100%;
  }
  
  > * {
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
  }
}

// Status Mixins
@mixin status-badge($color, $bg-color: null) {
  display: inline-flex;
  align-items: center;
  padding: $spacing-xs $spacing-sm;
  border-radius: $border-radius-sm;
  font-size: $font-size-xs;
  font-weight: $font-weight-medium;
  text-transform: uppercase;
  letter-spacing: 0.5px;
  
  background-color: $bg-color or rgba($color, 0.1);
  color: $color;
  border: 1px solid rgba($color, 0.2);
}

// Animation Keyframes
@keyframes fadeIn {
  from {
    opacity: 0;
  }
  to {
    opacity: 1;
  }
}

@keyframes slideInUp {
  from {
    transform: translateY(20px);
    opacity: 0;
  }
  to {
    transform: translateY(0);
    opacity: 1;
  }
}

@keyframes slideInDown {
  from {
    transform: translateY(-20px);
    opacity: 0;
  }
  to {
    transform: translateY(0);
    opacity: 1;
  }
}

@keyframes slideInLeft {
  from {
    transform: translateX(-20px);
    opacity: 0;
  }
  to {
    transform: translateX(0);
    opacity: 1;
  }
}

@keyframes slideInRight {
  from {
    transform: translateX(20px);
    opacity: 0;
  }
  to {
    transform: translateX(0);
    opacity: 1;
  }
}

@keyframes pulse {
  0%, 100% {
    opacity: 1;
  }
  50% {
    opacity: 0.5;
  }
}

